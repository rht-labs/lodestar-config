apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: {{ .Values.name }}
    deploymentconfig: {{ .Values.name }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        deploymentconfig: {{ .Values.name }}
    spec:
      containers:
      - envFrom:
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        image: {{ .Values.name }}:{{ .Values.imageTag }}
        imagePullPolicy: Always
        name: {{ .Values.name }}
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
{{- range $rConfig := .Values.runtimeConfigs }}
        - name: {{ $rConfig.name }}-cm-volume
          mountPath: {{ $rConfig.path }}/{{ $rConfig.file }}
          subPath: {{ $rConfig.file }}
{{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
{{- range $rConfig := .Values.runtimeConfigs }}
      - name: {{ $rConfig.name }}-cm-volume
        configMap:
          name: {{ $rConfig.name }}-cm
{{- end }}
  test: false
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      from:
        kind: ImageStreamTag
        name: {{ .Values.name }}:{{ .Values.imageTag }}
      containerNames:
      - {{ .Values.name }}
